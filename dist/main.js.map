{"mappings":"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","sources":["src/main.js","src/settings.js","src/calculations.js","src/render.js"],"sourcesContent":["import { positionSettings } from \"./settings.js\";\r\nimport {\r\n  calculatePositionsSkills,\r\n  calculateBestPosition,\r\n  calculateSkillWithExp,\r\n} from \"./calculations.js\";\r\nimport { renderTableCell, renderComparison } from \"./render.js\";\r\n\r\n/**\r\n * View Functions\r\n */\r\n\r\nconst viewPlayerList = () => {\r\n  const tableHeads = document\r\n    .getElementById(\"table-1\")\r\n    .querySelectorAll(\"thead\");\r\n\r\n  const playerRows = document\r\n    .getElementById(\"table-1\")\r\n    .querySelector(\"tbody\")\r\n    .querySelectorAll(\"tr\");\r\n\r\n  tableHeads.forEach((head) => {\r\n    head.querySelector(\"tr\").appendChild(renderTableCell(\"POS\", \"th1\"));\r\n    head.querySelector(\"tr\").appendChild(renderTableCell(\"SK\", \"th2\"));\r\n    head.querySelector(\"tr\").appendChild(renderTableCell(\"RATING\", \"th1\"));\r\n  });\r\n\r\n  playerRows.forEach((playerRow, index) => {\r\n    const playerColumns = playerRow.querySelectorAll(\"td\");\r\n\r\n    const player = {\r\n      name: playerColumns[0].textContent,\r\n      age: playerColumns[2].textContent,\r\n      careerLongitivity: Array.from(playerColumns[5].textContent)[0],\r\n      skills: {\r\n        goalie: playerColumns[6].textContent,\r\n        defence: playerColumns[7].textContent,\r\n        offence: playerColumns[8].textContent,\r\n        shooting: playerColumns[9].textContent,\r\n        passing: playerColumns[10].textContent,\r\n        technical: playerColumns[11].textContent,\r\n        aggression: playerColumns[12].textContent,\r\n      },\r\n      experience: parseInt(playerColumns[13].textContent),\r\n      overall: playerColumns[14].textContent,\r\n    };\r\n\r\n    const rowClass = index % 2 === 0 ? \"tr1\" : \"tr0\";\r\n    const skills = calculatePositionsSkills(player);\r\n    const bestPosition = calculateBestPosition(skills);\r\n    const bestSkillWithExp = calculateSkillWithExp(\r\n      bestPosition.skill,\r\n      player.experience\r\n    );\r\n\r\n    playerRow.appendChild(\r\n      renderTableCell(bestPosition.position, `${rowClass}td1`)\r\n    );\r\n\r\n    playerRow.appendChild(renderTableCell(bestSkillWithExp, `${rowClass}td2`));\r\n\r\n    const ratingTd = document.createElement(\"td\");\r\n    ratingTd.classList.add(`${rowClass}td1`);\r\n    ratingTd.appendChild(renderComparison(bestPosition.skill));\r\n\r\n    playerRow.appendChild(ratingTd);\r\n  });\r\n};\r\n\r\nconst viewPlayerProfile = () => {\r\n  const playerTable = document.getElementById(\"table-1\");\r\n\r\n  const player = {\r\n    careerLongitivity: Array.from(\r\n      playerTable.querySelector(\"#life_time\").textContent\r\n    )[0],\r\n    skills: {\r\n      goalie: playerTable.querySelector(\"#goalie\").textContent,\r\n      defence: playerTable.querySelector(\"#defense\").textContent,\r\n      offence: playerTable.querySelector(\"#attack\").textContent,\r\n      shooting: playerTable.querySelector(\"#shooting\").textContent,\r\n      passing: playerTable.querySelector(\"#passing\").textContent,\r\n      technical: playerTable.querySelector(\"#technique_attribute\").textContent,\r\n      aggression: playerTable.querySelector(\"#aggressive\").textContent,\r\n    },\r\n    experience: parseInt(playerTable.querySelector(\"#experience\").textContent),\r\n    overall: playerTable.querySelector(\"#index_skill\").textContent,\r\n  };\r\n\r\n  const positions = calculatePositionsSkills(player);\r\n  const bestPosition = calculateBestPosition(positions);\r\n\r\n  console.log(positions);\r\n  console.log(bestPosition);\r\n\r\n  const contentColumn = document.querySelector(\".column_left\");\r\n\r\n  const content = document.createElement(\"div\");\r\n  content.textContent = `${bestPosition.position} ${\r\n    bestPosition.skill\r\n  } (${calculateSkillWithExp(bestPosition.skill, player.experience)})`;\r\n  contentColumn.appendChild(content);\r\n};\r\n\r\nconst viewLineupChange = () => {\r\n  const tableHeads = document\r\n    .getElementById(\"table-1\")\r\n    .querySelectorAll(\"thead\");\r\n\r\n  const playerRows = document\r\n    .getElementById(\"table-1\")\r\n    .querySelector(\"tbody\")\r\n    .querySelectorAll(\"tr\");\r\n\r\n  tableHeads.forEach((head) => {\r\n    head.querySelector(\"tr\").appendChild(renderTableCell(\"POS\", \"th1\"));\r\n    head.querySelector(\"tr\").appendChild(renderTableCell(\"SK\", \"th2\"));\r\n  });\r\n\r\n  playerRows.forEach((playerRow, index) => {\r\n    const playerColumns = playerRow.querySelectorAll(\"td\");\r\n\r\n    const player = {\r\n      name: playerColumns[2].textContent,\r\n      skills: {\r\n        goalie: playerColumns[6].textContent,\r\n        defence: playerColumns[7].textContent,\r\n        offence: playerColumns[8].textContent,\r\n        shooting: playerColumns[9].textContent,\r\n        passing: playerColumns[10].textContent,\r\n        technical: playerColumns[11].textContent,\r\n        aggression: playerColumns[12].textContent,\r\n      },\r\n      experience: parseInt(playerColumns[13].textContent),\r\n      overall: playerColumns[14].textContent,\r\n    };\r\n\r\n    const rowClass = index % 2 === 0 ? \"tr1\" : \"tr0\";\r\n    const skills = calculatePositionsSkills(player);\r\n    const bestPosition = calculateBestPosition(skills);\r\n\r\n    playerRow.appendChild(\r\n      renderTableCell(bestPosition.position, `${rowClass}td1`)\r\n    );\r\n\r\n    playerRow.appendChild(\r\n      renderTableCell(\r\n        calculateSkillWithExp(bestPosition.skill, player.experience),\r\n        `${rowClass}td2`\r\n      )\r\n    );\r\n  });\r\n};\r\n\r\n/**\r\n * Run View Functions\r\n */\r\n\r\nif (window.location.href.includes(\"speletaju-parskats\")) viewPlayerList();\r\n\r\nif (window.location.href.includes(\"speletajs\")) viewPlayerProfile();\r\n\r\nif (window.location.href.includes(\"rediget-mainu\")) viewLineupChange();\r\n","const positionSettings = [\r\n  {\r\n    name: \"Goalie\",\r\n    ratios: {\r\n      goalie: 1,\r\n      technical: 0.5,\r\n      passing: 0.5,\r\n    },\r\n  },\r\n  {\r\n    name: \"Defence\",\r\n    ratios: {\r\n      defence: 1,\r\n      passing: 0.5,\r\n      aggression: 0.5,\r\n    },\r\n  },\r\n  {\r\n    name: \"Winger\",\r\n    ratios: {\r\n      offence: 1,\r\n      technical: 0.5,\r\n      aggression: 0.5,\r\n    },\r\n  },\r\n  {\r\n    name: \"Center\",\r\n    ratios: {\r\n      offence: 1,\r\n      technical: 0.5,\r\n      passing: 0.5,\r\n    },\r\n  },\r\n];\r\n\r\nconst ratingSettings = {\r\n  low: 500,\r\n  medium: 1000,\r\n  high: 1500,\r\n};\r\n\r\nexport { positionSettings, ratingSettings };\r\n","import { positionSettings } from \"./settings.js\";\r\n\r\nconst calculatePositionsSkills = (player) => {\r\n  const positionSkills = [];\r\n  positionSettings.forEach((position) => {\r\n    const skills = [];\r\n\r\n    for (const [key, value] of Object.entries(position.ratios)) {\r\n      skills.push(parseInt(player.skills[key]) / value);\r\n    }\r\n\r\n    positionSkills.push({\r\n      position: position.name,\r\n      level: Math.min(...skills),\r\n    });\r\n  });\r\n\r\n  return positionSkills;\r\n};\r\n\r\nconst calculateBestPosition = (skills) => {\r\n  let bestPosition = {\r\n    position: \"Unknown\",\r\n    skill: 0,\r\n  };\r\n\r\n  skills.forEach((skill) => {\r\n    if (skill.level > bestPosition.skill) {\r\n      bestPosition.position = skill.position;\r\n      bestPosition.skill = skill.level;\r\n    }\r\n  });\r\n  return bestPosition;\r\n};\r\n\r\nconst calculateSkillWithExp = (skill, experience) => {\r\n  return Math.round(skill * (1 + experience / 500));\r\n};\r\n\r\nexport {\r\n  calculatePositionsSkills,\r\n  calculateBestPosition,\r\n  calculateSkillWithExp,\r\n};\r\n","import { ratingSettings } from \"./settings.js\";\r\n\r\nconst renderTableCell = (content, cssClass) => {\r\n  const cell = document.createElement(\"td\");\r\n  cell.classList.add(cssClass);\r\n  cell.textContent = content;\r\n  return cell;\r\n};\r\n\r\nconst renderComparison = (skill) => {\r\n  const ratingPercentage = Math.min((skill / ratingSettings.low) * 100, 100);\r\n  console.log(\r\n    `skill is ${skill}, compared to ${ratingSettings.low}, is ${ratingPercentage}`\r\n  );\r\n\r\n  const ratingOuter = document.createElement(\"div\");\r\n  const ratingInner = document.createElement(\"div\");\r\n\r\n  ratingOuter.classList.add(\"rating\");\r\n  ratingInner.classList.add(\"rating__inner\");\r\n\r\n  ratingInner.setAttribute(\"style\", `width: ${ratingPercentage}%`);\r\n  ratingOuter.setAttribute(\"alt\", `${ratingPercentage}%`);\r\n\r\n  ratingOuter.appendChild(ratingInner);\r\n\r\n  return ratingOuter;\r\n};\r\n\r\nexport { renderTableCell, renderComparison };\r\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}